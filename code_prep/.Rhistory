rm(list=ls())
setwd(paste0( "C:/Users/franc/Documents/decision_theory/results/") )
path_to_save = paste0( "C:/Users/franc/Documents/decision_theory/img/")
list.files()
library(ggplot2)
library(tidyverse)
library(RColorBrewer)
library(miceadds)
library(gganimate)
library(dplyr)
library(survival)
landmark_ages = seq(40,80, by = 5)
GLOB_horizon = 10
theme_set(theme_bw())
pe_10_cvd_tot = NULL
pe_10_death_tot = NULL
pe_10_composite_tot = NULL
pe_5_cvd = NULL
cindex_10_composite_tot =  NULL
cindex_10_death_tot = NULL
cindex_10_cvd_tot =  NULL
cindex_10_composite_tot_F =  NULL
cindex_10_death_tot_F= NULL
cindex_10_cvd_tot_F =  NULL
for( j in 1:2 )
{
GENDER = ifelse( j == 1, "male", "female" )
gender = ifelse( j == 1, "m", "f" )
for( i in landmark_ages )
{
load.Rdata( paste0( "results_", GENDER,"/data_cindex_10composite_RIRS_", i, "_", gender, ".RData"), paste0("cindex_10_composite_", i ) )
load.Rdata( paste0( "results_", GENDER,"/data_cindex_10CVD_RIRS_", i, "_", gender, ".RData"), paste0("cindex_10_cvd_", i ) )
load.Rdata( paste0( "results_", GENDER,"/data_cindex_10death_RIRS_", i, "_", gender, ".RData"), paste0("cindex_10_death_", i ) )
#check on colnames
cindex_10_composite_tot_F = rbind( cindex_10_composite_tot_F,
cbind( get( paste0("cindex_10_composite_", i ) ), gender ) )
cindex_10_death_tot_F = rbind( cindex_10_death_tot_F,
cbind( get( paste0("cindex_10_death_", i ) ), gender ) )
cindex_10_cvd_tot_F = rbind( cindex_10_cvd_tot_F,
cbind( get( paste0("cindex_10_cvd_", i ) ), gender ) )
}
}
j = 2
GENDER = ifelse( j == 1, "male", "female" )
cindex_10_composite_tot =  NULL
cindex_10_death_tot = NULL
cindex_10_cvd_tot =  NULL
cindex_10_composite_tot_F =  NULL
cindex_10_death_tot_F= NULL
cindex_10_cvd_tot_F =  NULL
GENDER = ifelse( j == 1, "male", "female" )
gender = ifelse( j == 1, "m", "f" )
for( i in landmark_ages )
{
load.Rdata( paste0( "results_", GENDER,"/data_cindex_10composite_RIRS_", i, "_", gender, ".RData"), paste0("cindex_10_composite_", i ) )
load.Rdata( paste0( "results_", GENDER,"/data_cindex_10CVD_RIRS_", i, "_", gender, ".RData"), paste0("cindex_10_cvd_", i ) )
load.Rdata( paste0( "results_", GENDER,"/data_cindex_10death_RIRS_", i, "_", gender, ".RData"), paste0("cindex_10_death_", i ) )
#check on colnames
cindex_10_composite_tot_F = rbind( cindex_10_composite_tot_F,
cbind( get( paste0("cindex_10_composite_", i ) ), gender ) )
cindex_10_death_tot_F = rbind( cindex_10_death_tot_F,
cbind( get( paste0("cindex_10_death_", i ) ), gender ) )
cindex_10_cvd_tot_F = rbind( cindex_10_cvd_tot_F,
cbind( get( paste0("cindex_10_cvd_", i ) ), gender ) )
}
cindex_10_composite_tot_F
head( cindex_10_composite_tot_F )
j
GENDER = ifelse( j == 1, "male", "female" )
gender = ifelse( j == 1, "m", "f" )
i = 40
load.Rdata( paste0( "results_", GENDER,"/pred_error_composite_10_RIRS_", i, "_", gender, ".RData"), paste0("pe_10_composite_", i ) )
load.Rdata( paste0( "results_", GENDER,"/pred_error_cvd_10_RIRS_", i, "_", gender, ".RData"), paste0("pe_10_cvd_", i ) )
load.Rdata( paste0( "results_", GENDER,"/pred_error_death_10_RIRS_", i, "_", gender, ".RData"), paste0("pe_10_death_", i ) )
pe_10_composite_40
load.Rdata( paste0( "results_", GENDER,"/pred_error_composite_10_RIRS_", i, "_", gender, ".RData"), paste0("pe_10_composite_", i ) )
load.Rdata( paste0( "results_", GENDER,"/pred_error_cvd_10_RIRS_", i, "_", gender, ".RData"), paste0("pe_10_cvd_", i ) )
load.Rdata( paste0( "results_", GENDER,"/pred_error_death_10_RIRS_", i, "_", gender, ".RData"), paste0("pe_10_death_", i ) )
pe_10_composite_40
pe_10_cvd_40
pe_10_death_40
j = 1
cindex_10_composite_tot =  NULL
cindex_10_death_tot = NULL
cindex_10_cvd_tot =  NULL
GENDER = ifelse( j == 1, "male", "female" )
gender = ifelse( j == 1, "m", "f" )
for( i in landmark_ages )
{
load.Rdata( paste0( "results_", GENDER,"/data_cindex_10composite_RIRS_", i, "_", gender, ".RData"), paste0("cindex_10_composite_", i ) )
load.Rdata( paste0( "results_", GENDER,"/data_cindex_10CVD_RIRS_", i, "_", gender, ".RData"), paste0("cindex_10_cvd_", i ) )
load.Rdata( paste0( "results_", GENDER,"/data_cindex_10death_RIRS_", i, "_", gender, ".RData"), paste0("cindex_10_death_", i ) )
#check on colnames
cindex_10_composite_tot = rbind( cindex_10_composite_tot,
cbind( get( paste0("cindex_10_composite_", i ) ), gender ) )
cindex_10_death_tot = rbind( cindex_10_death_tot,
cbind( get( paste0("cindex_10_death_", i ) ), gender ) )
cindex_10_cvd_tot = rbind( cindex_10_cvd_tot,
cbind( get( paste0("cindex_10_cvd_", i ) ), gender ) )
}
cindex_10_composite_tot = rbind( cindex_10_composite_tot, cindex_10_composite_tot_F )
cindex_10_cvd_tot = rbind( cindex_10_cvd_tot, cindex_10_cvd_tot_F )
cindex_10_death_tot = rbind( cindex_10_death_tot, cindex_10_death_tot_F )
#colnames(cindex_10_death_tot_F)
colnames(cindex_10_death_tot) = colnames(cindex_10_death_tot_F)
cindex_10_death_tot = rbind( cindex_10_death_tot, cindex_10_death_tot_F )
#overall c-idex
#cvd
surv_info_cvd = Surv( time = cindex_10_cvd_tot$surv_10CVD[,1], event = cindex_10_cvd_tot$surv_10CVD[,2])
cindex_temp_cvd = concordance( surv_info_cvd ~ cindex_10_cvd_tot$survival_expected_10CVD, cluster = cindex_10_cvd_tot$cluster_patid )
cindex_temp_cvd_mine = concordance( surv_info_cvd ~ I(-cindex_10_cvd_tot$lp_val_10CVD),  cluster = cindex_10_cvd_tot$cluster_patid )
overall_cindex_cvd = data.frame( type = "CVD", conc = cindex_temp_cvd$concordance, conc_sd = sqrt( cindex_temp_cvd$var ), conc_mine = cindex_temp_cvd_mine$concordance, conc_sd_mine = sqrt( cindex_temp_cvd_mine$var ) )
#death
surv_info_death = Surv( time = cindex_10_death_tot$surv_10death[,1], event = cindex_10_death_tot$surv_10death[,2])
cindex_temp_death = concordance( surv_info_death ~ cindex_10_death_tot$survival_expected_10death, cluster = cindex_10_death_tot$cluster_patid)
cindex_temp_death_mine = concordance( surv_info_death ~ I(-cindex_10_death_tot$lp_val_10eath), cluster = cindex_10_death_tot$cluster_patid)
overall_cindex_death = data.frame( type = "Death", conc = cindex_temp_death$concordance, conc_sd = sqrt( cindex_temp_death$var ), conc_mine = cindex_temp_death_mine$concordance, conc_sd_mine = sqrt( cindex_temp_death_mine$var ) )
#composite
surv_info_composite = Surv( time = cindex_10_composite_tot$surv_10composite[,1], event = cindex_10_composite_tot$surv_10composite[,2])
cindex_temp_composite = concordance( surv_info_composite ~ cindex_10_composite_tot$survival_expected_10composite, cluster = cindex_10_cvd_tot$cluster_patid)
cindex_temp_composite_mine = concordance( surv_info_composite ~ I(-cindex_10_composite_tot$lp_val_10composite), cluster = cindex_10_composite_tot$cluster_patid)
overall_cindex_composite = data.frame( type = "Composite", conc =  cindex_temp_composite$concordance, conc_sd = sqrt( cindex_temp_composite$var ), conc_mine = cindex_temp_composite_mine$concordance, conc_sd_mine = sqrt( cindex_temp_composite_mine$var ) )
cindex_cvd_10_global = NULL
cindex_death_10_global = NULL
cindex_composite_10_global = NULL
for( j in 1:2 ){
GENDER = ifelse( j == 1, "male", "female" )
gender = ifelse( j == 1, "m", "f" )
for( i in landmark_ages )
{
#cvd
idx_oi_cvd = which(cindex_10_cvd_tot$lm_age == i )
surv_info_cvd = Surv( time = cindex_10_cvd_tot$surv_10CVD[idx_oi_cvd,1], event = cindex_10_cvd_tot$surv_10CVD[idx_oi_cvd,2])
cindex_temp_cvd = concordance( surv_info_cvd ~ cindex_10_cvd_tot$survival_expected_10CVD[idx_oi_cvd])
#cindex_temp_cvd_mine = concordance( surv_info_cvd ~ I(-cindex_10_cvd_tot$lp_val_10CVD[idx_oi_cvd]))
line_to_add_cvd = c( gender, i, cindex_temp_cvd$concordance, sqrt( cindex_temp_cvd$var ) )
cindex_cvd_10_global = rbind( cindex_cvd_10_global, line_to_add_cvd )
#death
idx_oi_death = which(cindex_10_death_tot$lm_age == i )
surv_info_death = Surv( time = cindex_10_death_tot$surv_10death[idx_oi_death,1], event = cindex_10_death_tot$surv_10death[idx_oi_death,2])
cindex_temp_death = concordance( surv_info_death ~ cindex_10_death_tot$survival_expected_10death[idx_oi_death])
#cindex_temp_death_mine = concordance( surv_info_death ~ I(-cindex_10_death_tot$lp_val_10eath[idx_oi_death]))
line_to_add_death = c( gender, i, cindex_temp_death$concordance, sqrt( cindex_temp_death$var ) )
cindex_death_10_global = rbind( cindex_death_10_global, line_to_add_death )
#composite
idx_oi_composite = which(cindex_10_composite_tot$lm_age == i )
surv_info_composite = Surv( time = cindex_10_composite_tot$surv_10composite[idx_oi_composite,1], event = cindex_10_composite_tot$surv_10composite[idx_oi_composite,2])
cindex_temp_composite = concordance( surv_info_composite ~ cindex_10_composite_tot$survival_expected_10composite[idx_oi_composite])
#cindex_temp_composite_mine = concordance( surv_info_composite ~ I(-cindex_10_composite_tot$lp_val_10composite[idx_oi_composite]))
line_to_add_composite = c( gender, i, cindex_temp_composite$concordance, sqrt( cindex_temp_composite$var) )
cindex_composite_10_global = rbind( cindex_composite_10_global, line_to_add_composite )
}
}
plot(cindex_10_composite_40$lp_val_10composite)
cindex_cvd_10_global = as.data.frame(cindex_cvd_10_global)
cindex_death_10_global = as.data.frame(cindex_death_10_global)
cindex_composite_10_global = as.data.frame(cindex_composite_10_global)
cindex_cvd_10_global$type = "CVD"
cindex_death_10_global$type = "Death"
cindex_composite_10_global$type = "Composite"
cindex_cvd_10_global$overall_cindex = overall_cindex_cvd$conc
cindex_cvd_10_global$overall_cindex_se = overall_cindex_cvd$conc_sd
cindex_death_10_global$overall_cindex = overall_cindex_death$conc
cindex_death_10_global$overall_cindex_se = overall_cindex_death$conc_sd
overall_cindex_death
cindex_composite_10_global$overall_cindex = overall_cindex_composite$conc
cindex_composite_10_global$overall_cindex_se = overall_cindex_composite$conc_sd
#death
surv_info_death = Surv( time = cindex_10_death_tot$surv_10death[,1], event = cindex_10_death_tot$surv_10death[,2])
cindex_temp_death = concordance( surv_info_death ~ cindex_10_death_tot$survival_expected_10death, cluster = cindex_10_death_tot$cluster_patid)
cindex_temp_death_mine = concordance( surv_info_death ~ I(-cindex_10_death_tot$lp_val_10eath), cluster = cindex_10_death_tot$cluster_patid)
overall_cindex_death = data.frame( type = "Death", conc = cindex_temp_death$concordance, conc_sd = sqrt( cindex_temp_death$var ), conc_mine = cindex_temp_death_mine$concordance, conc_sd_mine = sqrt( cindex_temp_death_mine$var ) )
cindex_temp_death_mine = concordance( surv_info_death ~ I(-cindex_10_death_tot$lp_val_10death), cluster = cindex_10_death_tot$cluster_patid)
overall_cindex_death = data.frame( type = "Death", conc = cindex_temp_death$concordance, conc_sd = sqrt( cindex_temp_death$var ), conc_mine = cindex_temp_death_mine$concordance, conc_sd_mine = sqrt( cindex_temp_death_mine$var ) )
cindex_death_10_global$overall_cindex = overall_cindex_death$conc
cindex_death_10_global$overall_cindex_se = overall_cindex_death$conc_sd
cindex_10_global = rbind( cindex_cvd_10_global,
cindex_death_10_global,
cindex_composite_10_global)
colnames( cindex_10_global ) =c("gender","lm_age", "conc", "conc_sd",  "type", "overall_conc","overall_conc_se","overall_conc_mine","overall_conc_se_mine")
colnames( cindex_10_global ) =c("gender","lm_age", "conc", "conc_sd",  "type", "overall_conc","overall_conc_se")#,"overall_conc_mine","overall_conc_se_mine")
cindex_10_global$conc = as.numeric(cindex_10_global$conc)
cindex_10_global$conc_sd = as.numeric(cindex_10_global$conc_sd)
cindex_10_global$overall_conc = as.numeric(cindex_10_global$overall_conc)
cindex_10_global$UB_overall = cindex_10_global$overall_conc + cindex_10_global$overall_conc_se
cindex_10_global$LB_overall = cindex_10_global$overall_conc - cindex_10_global$overall_conc_se
p1 =  ggplot(cindex_10_global, aes( x = lm_age, y = conc, col = type ) ) +
geom_pointrange(aes(ymin=conc-conc_sd, ymax=conc+conc_sd) ) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
geom_line( aes(y = overall_conc, col = type)) +
geom_line( aes(y = UB_overall, col = type), linetype = "dashed") +
geom_line( aes(y = LB_overall, col = type), linetype = "dashed") +
facet_grid(cols = vars(type)) +
labs(y = "c-index", x = "Landmark age", main = i)
p1
head(cindex_10_global)
is(cindex_10_global$overall_conc)
p1 =  ggplot(cindex_10_global, aes( x = lm_age, y = conc, col = gender ) ) +
geom_pointrange(aes(ymin=conc-conc_sd, ymax=conc+conc_sd) ) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
geom_line( aes(y = overall_conc, col = type)) +
geom_line( aes(y = UB_overall, col = type), linetype = "dashed") +
geom_line( aes(y = LB_overall, col = type), linetype = "dashed") +
facet_grid(cols = vars(type)) +
labs(y = "c-index", x = "Landmark age", main = i)
p1
table(cindex_10_global$gender)
p1 =  ggplot(cindex_10_global, aes( x = lm_age, y = conc, col = as.factor(gender) ) ) +
geom_pointrange(aes(ymin=conc-conc_sd, ymax=conc+conc_sd) ) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
geom_line( aes(y = overall_conc, col = gender)) +
geom_line( aes(y = UB_overall, col = type), linetype = "dashed") +
geom_line( aes(y = LB_overall, col = type), linetype = "dashed") +
facet_grid(cols = vars(type)) +
labs(y = "c-index", x = "Landmark age", main = i)
p1
p1 =  ggplot(cindex_10_global, aes( x = lm_age, y = conc, col = as.factor(gender) ) ) +
geom_pointrange(aes(ymin=conc-conc_sd, ymax=conc+conc_sd) ) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
geom_line( aes(y = overall_conc)) +
geom_line( aes(y = UB_overall), linetype = "dashed") +
geom_line( aes(y = LB_overall), linetype = "dashed") +
facet_grid(cols = vars(type)) +
labs(y = "c-index", x = "Landmark age", main = i)
p1
p1 =  ggplot(cindex_10_global, aes( x = lm_age, y = conc, col = gender ) ) +
geom_pointrange(aes(ymin=conc-conc_sd, ymax=conc+conc_sd) ) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
geom_line( aes(y = overall_conc)) +
geom_line( aes(y = UB_overall), linetype = "dashed") +
geom_line( aes(y = LB_overall), linetype = "dashed") +
facet_grid(cols = vars(type)) +
labs(y = "c-index", x = "Landmark age", main = i)
p1
is(cindex_10_global$lm_age)
p1 =  ggplot(cindex_10_global, aes( x = as.numeric(lm_age), y = conc, col = gender ) ) +
geom_pointrange(aes(ymin=conc-conc_sd, ymax=conc+conc_sd) ) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
geom_line( aes(y = overall_conc)) +
geom_line( aes(y = UB_overall), linetype = "dashed") +
geom_line( aes(y = LB_overall), linetype = "dashed") +
facet_grid(cols = vars(type)) +
labs(y = "c-index", x = "Landmark age", main = i)
p1
p1 =  ggplot(cindex_10_global, aes( x = as.numeric(lm_age), y = conc, col = gender ) ) +
geom_pointrange(aes(ymin=conc-conc_sd, ymax=conc+conc_sd) ) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
geom_line( aes(y = overall_conc, col = gender)) +
geom_line( aes(y = UB_overall), linetype = "dashed") +
geom_line( aes(y = LB_overall), linetype = "dashed") +
facet_grid(cols = vars(type)) +
labs(y = "c-index", x = "Landmark age", main = i)
p1
cindex_10_global[type == "CVD", gender == "f", "conc"]
cindex_10_global[type == "CVD" & gender == "f", "conc"]
cindex_10_global[cindex_10_global$type == "CVD" & cindex_10_global$gender == "f", "conc"]
cindex_10_global[cindex_10_global$type == "CVD" & cindex_10_global$gender == "m", "conc"]
rm(list=ls())
LOCAL = T
#outcomes = read_dta("../../real_data/patients_outcomes.dta")
exposures = read_dta("../../real_data/cprd_2M_exposures.dta")
library(data.table)
library(nlme)
library(survival)
library(tidyverse)
library(haven)
#outcomes = read_dta("../../real_data/patients_outcomes.dta")
exposures = read_dta("../../real_data/cprd_2M_exposures.dta")
setwd('C:/Users/franc/Documents/decision_theory/code/code_prep')
#outcomes = read_dta("../../real_data/patients_outcomes.dta")
exposures = read_dta("../../real_data/cprd_2M_exposures.dta")
#keep variables of interest
exp_oi = c("bmi","hdl", "tchol", "sbp", "smokbin")
exposures_red = exposures[ which( exposures$exposure %in% exp_oi ), ]
#remove the exposures data
rm(exposures)
#remove unrealistic data
real_sbp = which( exposures_red$exposure == "sbp" & exposures_red$original >= 60 & exposures_red$original <= 250 )
real_tchol = which( exposures_red$exposure == "tchol" & exposures_red$original >= 1.75 & exposures_red$original <= 20 )
real_hdl = which( exposures_red$exposure == "hdl" & exposures_red$original >= 0.3 & exposures_red$original <= 3.1 )
real_bmi = which( exposures_red$exposure == "bmi" & exposures_red$original <= 80 )
real_smokbin = which( exposures_red$exposure == "smokbin" )
real_values = sort( c( real_sbp, real_tchol, real_hdl, real_bmi, real_smokbin ) )
exposures_red = exposures_red[ real_values, ]
rm( real_bmi, real_sbp, real_smokbin, real_tchol, real_hdl, real_values )
#correct CVD post censoring
cvd_post_censoring = which( !is.na(outcomes$cvd_date) & outcomes$end_date < outcomes$cvd_date )
outcomes = read_dta("../../real_data/patients_outcomes.dta")
#correct CVD post censoring
cvd_post_censoring = which( !is.na(outcomes$cvd_date) & outcomes$end_date < outcomes$cvd_date )
length( cvd_post_censoring )
dim(outcomes)
73534/2610264
outcomes$cvd_date[ cvd_post_censoring ] = NA
outcomes$cvd_ind[ cvd_post_censoring ] = 0
cvd_post_censoring = which( !is.na(outcomes$cvd_date) & outcomes$end_date < outcomes$cvd_date )
stopifnot( length( cvd_post_censoring ) == 0 )
rm( cvd_post_censoring )
#uniform the notation for indices of events:
length( which(is.na( outcomes$cvd_ind)))
length( which(is.na( outcomes$cvd_ind ) & is.na(outcomes$cvd_date)))
outcomes$cvd_ind[ which(is.na( outcomes$cvd_ind)) ] = 0
length( which(is.na( outcomes$death_ind)))
#correct Death post censoring
death_post_censoring = which( !is.na(outcomes$death_date) & outcomes$end_date < outcomes$death_date )
length( death_post_censoring )
outcomes$death_date[ death_post_censoring ] = NA
outcomes$death_ind[ death_post_censoring ] = 0
death_post_censoring = which( !is.na(outcomes$death_date) & outcomes$end_date < outcomes$death_date )
stopifnot( length( death_post_censoring ) == 0 )
rm( death_post_censoring )
#correct CVD post Death
cvd_post_death = which( !is.na(outcomes$cvd_date) & outcomes$death_date < outcomes$cvd_date )
stopifnot( length( cvd_post_death ) == 0 )
rm( cvd_post_death )
print("People that died with CVD (during or after diagnosis)")
length( which( outcomes$cvd_ind == 1 & outcomes$death_ind == 1 ) )/length(outcomes$cvd_ind)
print("People that died without a diagnosis of CVD")
length( which( outcomes$cvd_ind == 0 & outcomes$death_ind == 1 ) )/length(outcomes$cvd_ind)
print("People censored with a diagnosis of CVD")
length( which( outcomes$cvd_ind == 1 & outcomes$death_ind == 0 ) )/length(outcomes$cvd_ind)
print("People censored without a diagnosis of CVD")
length( which( outcomes$cvd_ind == 0 & outcomes$death_ind == 0 ) )/length(outcomes$cvd_ind)
#keep only the exposures before CVD date
exposures_red = exposures_red[, c("patid", "exp_date", "exp_age", "exposure", "original", "scaled")]
exposures_red_merged = merge( exposures_red, outcomes[ ,c("patid", "d_yob", "cvd_date", "cvd_ind", "gender") ], by = "patid", all.x = TRUE )
